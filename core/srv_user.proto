syntax="proto3";
package core;
option java_package = "com.bootapp.core.grpc";
import "google/api/annotations.proto";
import "core_common.proto";

service SrvCoreUserService {
    // =============================================== users
    rpc Register(RegisterReq) returns (UserWithOrgAuth) {
        option (google.api.http) = {
            post: "/rpc/auth/register"
            body: "*"
        };
    }
    rpc Login(LoginReq) returns (UserWithOrgAuth) {
        option (google.api.http) = {
            post: "/rpc/auth/login"
            body: "*"
        };
    }
    rpc Logout(Empty) returns (Empty) {
        option (google.api.http) = {
            get: "/rpc/auth/logout"
        };
    }
    rpc ResetPassword(ResetPasswordReq) returns (Empty) {
        option (google.api.http) = {
            post: "/rpc/auth/reset-password"
            body: "*"
        };
    }
    rpc Activate(Empty) returns (Empty) {
        option (google.api.http) = {
            post: "/rpc/auth/activate"
            body: "*"
        };
    }
    rpc UserInfo(Empty) returns (Empty) {
        option (google.api.http) = {
            get: "/rpc/auth/info"
        };
    }
    // =============================================== user management
    rpc QueryUsers(QueryUsersReq) returns (UsersResp) {
        option (google.api.http) = {
            get: "/rpc/users"
        };
    }

    // =============================================== admin APIs
    rpc AdminQueryUsers(QueryUsersReq) returns (UsersResp) {
        option (google.api.http) = {
            get: "/rpc/admin/users"
        };
    }
}

enum RegisterType {
    REGISTER_TYPE_NULL = 0;
    REGISTER_TYPE_USERNAME_PASS = 1;
    REGISTER_TYPE_PHONE_PASS = 2;
    REGISTER_TYPE_EMAIL_PASS = 3;
    REGISTER_TYPE_PHONE_CODE = 4;
    REGISTER_TYPE_PHONE_PASS_CODE = 5;
    REGISTER_TYPE_CIPHER = 6;
}
enum LoginType {
    LOGIN_TYPE_NULL = 0;
    LOGIN_TYPE_USERNAME_PASS = 1;
    LOGIN_TYPE_EMAIL_PASS = 2;
    LOGIN_TYPE_PHONE_PASS = 3;
    LOGIN_TYPE_ANY_PASS = 4;
    LOGIN_TYPE_PHONE_CODE = 5;
    LOGIN_TYPE_PHONE_LOGIN_OR_REG = 6;
}
enum ResetPasswordType {
    RESET_PASS_TYPE_NULL = 0;
    RESET_PASS_TYPE_PHONE_CODE = 1;
}

message RegisterReq {
    RegisterType type = 1;
    string    key = 2;
    string    secret = 3;
    string    code = 4;
    string    referral_code = 5;
}
message LoginReq {
    LoginType type = 1;
    string      key = 2;
    string    secret = 3;
    string    code = 4;
    int64    org_id = 5;
}
message ResetPasswordReq {
    ResetPasswordType type = 1;
    string key = 2;
    string secret = 3;
    string code = 4;
}

message QueryUsersReq {
    User user = 1;
    Pagination pagination = 2;
}
