syntax = "proto3";
option java_package = "com.bootapp.core.grpc";
import "core_common.proto";
//import "google/protobuf/wrappers.proto";
package core;

// add credential to prevent evil usage
service DalUserService {
    //--------------------------------------------------- user
    //--- Create a User
    rpc CreateUser(CreateUserReq) returns (UserWithOrgAuth);
    //--- Create users
    rpc CreateUsers(CreateUsersReq) returns (UsersResp);
    //--- Update a User
    rpc UpdateUser(UpdateUserReq) returns (Empty);
    //--- Read a single user with auth
    rpc ReadUserAuth(ReadUserReq) returns (UserWithOrgAuth);
    //--- Read a user list
    rpc ReadUsers(ReadUsersReq) returns (UsersResp);
    //--- Read users with in operator
    rpc ReadUsersIn(ReadUsersInReq) returns (UsersResp);
    //--- Delete a user by id/username/phone/email
    rpc DeleteUser(ReadUserReq) returns (Empty);
    //-------- others
    rpc VerifyUniqueUser(User) returns (Empty);
    //--------------------------------------------------- org
    rpc CreateOrg(OrgReq) returns (Empty);
    rpc UpdateOrg(OrgReq) returns (Empty);
    rpc ReadOrgs(ReadOrgsReq) returns (OrgsResp);
    rpc DeleteUserOrgs(AuthorizedIdsQueryReq) returns (Empty);
    //--------------------------------------------------- dept
    rpc CreateDept(DeptReq) returns (Empty);
    rpc UpdateDept(DeptReq) returns (Empty);
    rpc ReadDepts(ReadDeptsReq) returns (DeptsResp);
    //--------------------------------------------------- relation
    rpc CreateRelations(RelationsReq) returns (Empty);
    rpc UpdateRelations(RelationsReq) returns (Empty);
    rpc DeleteRelations(AuthorizedIdsQueryReq) returns (Empty);
    rpc ReadRelations(ReadRelationReq) returns (RelationsResp);
    rpc ReadDeptRelations(ReadRelationReq) returns (DeptRelationsResp);
    rpc ReadPartnerRelations(ReadRelationReq) returns (PartnerRelationsResp);
    rpc ReadOrgPartnersIn(ReadOrgPartnersInReq) returns (PartnerRelationsResp);
    //--------------------------------------------------- message
    rpc CreateMessage(UpdateMessageReq) returns (Empty);
    rpc ReadMessages(ReadMessagesReq) returns(MessageResp);
    rpc UpdateMessage(UpdateMessageReq) returns (Empty);
    //----------- message receives
    rpc ReadInbox(ReadInboxReq) returns (MessageResp);
    rpc UpdateInbox(UpdateInboxReq) returns (Empty);
    rpc DeleteInbox(UpdateInboxReq) returns (Empty);

    rpc DistributeMessages(Empty) returns (Empty);
}
enum UpdateUserType {
    UPDATE_USER_TYPE_NULL = 0;
    UPDATE_USER_TYPE_ID = 1;
    UPDATE_USER_TYPE_USERNAME = 2;
    UPDATE_USER_TYPE_PHONE = 3;
    UPDATE_USER_TYPE_EMAIL = 4;
}
// =========================================== User
message CreateUserReq {
    int64 org_id = 1;
    int64 user_id = 2;
    User user = 3;
}
message CreateUsersReq {
    int64 org_id = 1;
    int64 user_id = 2;
    repeated User data = 3;
}
message ReadUserReq {
    int64 org_id = 1;
    int64 user_id = 2;
    User user = 3;
}
message UpdateUserReq {
    int64 org_id = 1;
    int64 user_id = 2;
    UpdateUserType type = 3;
    User user = 4;
}
message ReadUsersReq {
    int64 org_id = 1;
    int64 user_id = 2;
    User user = 3;
    Pagination pagination = 5;
}
message ReadUsersInReq {
    int64 org_id = 1;
    int64 user_id = 2;

    repeated int64 user_ids = 3;
    repeated string phones = 5;
    repeated string emails = 6;
    repeated string usernames = 7;
    repeated string names = 8;

    Pagination pagination = 9;
}
// =========================================== Org
message OrgReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Organization org = 3;
}
message ReadOrgsReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Organization org = 3;
    Pagination pagination = 4;
}
// =========================================== Dept
message DeptReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Department dept = 3;
}
message ReadDeptsReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Department dept = 3;
    Pagination pagination = 4;
}
// =========================================== Relation
message RelationsReq {
    int64 org_id = 1;
    int64 user_id = 2;
    repeated Relation relation = 3;
}
message ReadRelationReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Relation relation = 3;
    Pagination pagination = 9;
}
message ReadOrgPartnersInReq {
    int64 org_id = 1;
    int64 user_id = 2;
    repeated int64 partner_ids = 3;
}
// =========================================== Message
message UpdateMessageReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Message message = 3;
}
message ReadMessagesReq {
    int64 org_id = 1;
    int64 user_id = 2;
    Message message = 3;
    Pagination pagination = 4;
}

message UpdateInboxReq {
    int64 org_id = 1;
    int64 user_id = 2;
    repeated int64 ids = 3;
    EntityStatus status = 4;
}

message ReadInboxReq {
    int64 org_id = 1;
    int64 user_id = 2;
    EntityStatus status = 3;
    int64 update_at = 4;
}